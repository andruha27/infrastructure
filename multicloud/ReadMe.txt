Все запросы поступают на один домен, домен хостится на cloudflare.
Клиент заходит либо на sasuagestore.com либо на sausagestore.com/de/ / sausagestore.com/ru/
Cloudflare либо в зависимости от "папки" региона либо по IP клиента направляет клиента на нужную региональную версию. РФ размещается на Yandex Cloud, остальные на AWS.
Регион можно сменить в шапке сайта, будет сменена папка сайта и запрос уйдет в другое облако. Куки будут те же, но корзина - обнулится, потому что она в другой БД ну и сами товары тоже будут другие.
В обоих облаках все крутится на кубере. Кодовая база - полностью общая, БД для каждого региона отдельные. 
В будущем понадобится сервис который будет строить мультирегиональные отчеты, но это лучше делать в какой-нибудь сторонней BI-системе, задача сайта только отдать нужные данные.

Плюсы:
* Общая кодовая база: легко исправлять ошибки, проще рефакторить
* Соблюдение закондательства по обработке и хранению персональных данных в разных регионах мира

Минусы
* При обновлениях, в случаях ошибок можно положить другие регионы, хотя изменения были нужны только для одного. Тут лучше продумать схему обновления регионов по очереди для избежания этого, что-то вроде тестового региона и потом, если все хорошо раскатывать на остальные.
* Сложности изменения кодовой базы: даже при незначительных изменениях нужно учитывать особенности всех регионов. Когда дело дойдет до иероглифов и арабской вязи даже просто поправить css будет сложно: латиница и кириллица идут слева направо, иероглифы сверху вниз, а вязь справа-налево, соответственно правки стилей надо проверить на всех типах алфавитов.

Более простой вариант на первом этапе: абсолютно изолированные копии и на самом деле, когда бизнесу нужно протестировать гипотезу, то быстрый mvp лучше поднять именно примитивной копией вообще без всяких сложностей, выделив на это нескольких членов команды. Внести в приложение все изменения для данного региона, оттестировать их и далее доработать общее приложение под реалии нового региона и уже потом полноценно запустить проект.